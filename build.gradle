plugins {
    id 'fabric-loom' version '1.10-SNAPSHOT'
    id 'com.gradleup.shadow' version '8.3.6'
    id 'maven-publish'
}

version = project.mod_version + "+" + project.minecraft_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

configurations {
    shade
    implementation.extendsFrom(shadow)
}

repositories {
    maven { url 'https://maven.tomalbrc.de' }
    maven { url = "https://maven.terraformersmc.com/" }
    maven { url = "https://maven.nucleoid.xyz" }
    maven { url = "https://maven.ladysnake.org/releases" }
    maven { url 'https://maven.parchmentmc.org' }
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings(loom.layered {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${project.minecraft_version}:${project.parchment_version}")
    })
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // Polymer
    modImplementation ("eu.pb4:polymer-core:${project.polymer_version}")
    modImplementation ("eu.pb4:polymer-blocks:${project.polymer_version}")
    modImplementation ("eu.pb4:polymer-resource-pack:${project.polymer_version}")
    modImplementation ("eu.pb4:polymer-resource-pack-extras:${project.polymer_version}")
    modImplementation ("eu.pb4:polymer-virtual-entity:${project.polymer_version}")
    modImplementation ("eu.pb4:polymer-networking:${project.polymer_version}")
    modImplementation ("eu.pb4:polymer-autohost:${project.polymer_version}")

    modImplementation include("de.tomalbrc:blockbench-import-library:${project.bil_version}")

    modRuntimeOnly modCompileOnly("de.tomalbrc:filament:${project.filament_version}")
    modRuntimeOnly modCompileOnly("eu.pb4.polyport:trinkets:${trinkets_version}")

    implementation shade('org.mongodb:mongodb-driver-sync:4.11.0')
}

processResources {
    inputs.property "version", project.version
    inputs.property "minecraft_version", project.minecraft_version
    inputs.property "loader_version", project.loader_version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version,
                "minecraft_version": project.minecraft_version,
                "loader_version": project.loader_version
    }
}

shadowJar {
    configurations = [project.configurations.shade]
    relocate 'com.mongodb', 'de.tomalbrc.balloons.shadow.mongo'
    relocate 'org.bson', 'de.tomalbrc.balloons.shadow.bson'
    archiveClassifier.set("shadow")
}

remapJar {
    dependsOn(shadowJar)
    input.set(shadowJar.archivePath)
}

def targetJavaVersion = 21
tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release.set(targetJavaVersion)
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                classifier "sources"
                builtBy remapSourcesJar
            }
        }
    }

    repositories {
    }
}
